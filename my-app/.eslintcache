[{"/Users/ming/Desktop/my-app/src/index.js":"1","/Users/ming/Desktop/my-app/src/reportWebVitals.js":"2","/Users/ming/Desktop/my-app/src/App.js":"3","/Users/ming/Desktop/my-app/src/Counter.js":"4"},{"size":500,"mtime":1608488815655,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608488815656,"results":"7","hashOfConfig":"6"},{"size":188,"mtime":1608489036436,"results":"8","hashOfConfig":"6"},{"size":1550,"mtime":1608490953443,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"8hjof8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/ming/Desktop/my-app/src/index.js",[],["20","21"],"/Users/ming/Desktop/my-app/src/reportWebVitals.js",[],"/Users/ming/Desktop/my-app/src/App.js",[],"/Users/ming/Desktop/my-app/src/Counter.js",["22","23","24","25","26","27","28","29"],"import React, {useEffect, useState } from \"react\";\nimport Grid from '@material-ui/core/Grid';\n\nfunction Counter() {\n\n    const [seconds, setSeconds] = useState(1)\n    const [minutes, setMinutes] = useState(1)\n    const [hours, setHours] = useState(1)\n    const [days, setDays] = useState(0)\n  \n    function updateTime() {\n      if (hours == 0 && minutes == 0 && seconds == 0) {\n        \n      }\n      else {\n        if (minutes == 0 && seconds == 0) {\n            setHours(hours => hours - 1);\n            setMinutes(59);\n            setSeconds(59);\n        } else if (seconds == 0) {\n            setMinutes(minutes => minutes - 1);\n            setSeconds(59);\n        } else{\n          setSeconds(seconds => seconds - 1);\n        }\n      }\n    }\n\n    useEffect(() => {\n      // use set timeout and be confident because updateTime will cause rerender\n      // rerender mean re call this effect => then it will be similar to how setinterval works\n      // but with easy to understand logic\n      const token = setTimeout(updateTime, 1000)\n  \n      return () => clearTimeout(token);\n      \n    })\n\n    function minTwoDigits(n) {\n        return (n < 10 ? '0' : '') + n;\n    }\n\n    const hoursRounded = minTwoDigits(hours);\n    const minutesRounded = minTwoDigits(minutes);\n    const secondsRounded = minTwoDigits(seconds);\n    const daysRounded = minTwoDigits(days);\n\n\n    return (<div>\n\n        <Grid container spacing={0} >\n            time: {hoursRounded}:{minutesRounded}:{secondsRounded}\n        </Grid>\n\n    </div>);\n  }\n\n  export default Counter;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":9,"column":18,"nodeType":"36","messageId":"37","endLine":9,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":12,"column":17,"nodeType":"40","messageId":"41","endLine":12,"endColumn":19},{"ruleId":"38","severity":1,"message":"39","line":12,"column":33,"nodeType":"40","messageId":"41","endLine":12,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":12,"column":49,"nodeType":"40","messageId":"41","endLine":12,"endColumn":51},{"ruleId":"38","severity":1,"message":"39","line":16,"column":21,"nodeType":"40","messageId":"41","endLine":16,"endColumn":23},{"ruleId":"38","severity":1,"message":"39","line":16,"column":37,"nodeType":"40","messageId":"41","endLine":16,"endColumn":39},{"ruleId":"38","severity":1,"message":"39","line":20,"column":28,"nodeType":"40","messageId":"41","endLine":20,"endColumn":30},{"ruleId":"34","severity":1,"message":"42","line":46,"column":11,"nodeType":"36","messageId":"37","endLine":46,"endColumn":22},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'setDays' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'daysRounded' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]